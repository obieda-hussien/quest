/**
 * JavaQuest Lessons Data
 * Contains all lesson content organized by learning stages
 */

window.lessonData = [
    // THE MAKER STAGE - Classes & Objects Basics
    {
        id: 'maker-001',
        title: 'ูุง ูู ุงูููุงุณุ',
        description: 'ุชุนูู ุฃุณุงุณูุงุช ุฅูุดุงุก ุงูููุงุณุงุช ูู Java',
        stage: 'maker',
        xp: 50,
        prerequisites: [],
        phases: [
            {
                type: 'learn',
                title: 'ููู ููููู ุงูููุงุณ',
                description: 'ุงูููุงุณ ูู ูุงูุจ ูุฅูุดุงุก ุงููุงุฆูุงุช - ูุซู ูุฎุทุท ุงูููุฒู',
                content: {
                    explanation: `
                        <h4>๐๏ธ ูุง ูู ุงูููุงุณุ</h4>
                        <p>ุงูููุงุณ ูู Java ูู ุจูุซุงุจุฉ ูุฎุทุท ุฃู ูุงูุจ ูุฅูุดุงุก ุงููุงุฆูุงุช. ููุฑ ููู ููุฎุทุท ุงูููุฒู - ูุญุฏุฏ ูุง ุณูุญุชููู ุงูููุฒู ููููู ููุณ ุงูููุฒู ููุณู.</p>
                        
                        <h5>ุนูุงุตุฑ ุงูููุงุณ ุงูุฃุณุงุณูุฉ:</h5>
                        <ul>
                            <li><strong>ุงูุงุณู:</strong> ูุจุฏุฃ ุจุญุฑู ูุจูุฑ ููุตู ุงููุงุฆู</li>
                            <li><strong>ุงูุฎุตุงุฆุต (Variables):</strong> ุชุฎุฒู ุจูุงูุงุช ุงููุงุฆู</li>
                            <li><strong>ุงูุทุฑู (Methods):</strong> ุชุญุฏุฏ ูุง ูููู ูููุงุฆู ูุนูู</li>
                        </ul>
                    `,
                    example: `public class Robot {
    // ุฎุตุงุฆุต ุงูุฑูุจูุช
    String name;
    String color;
    int batteryLevel;
    
    // ุทุฑููุฉ ููุชุนุฑูู ุจุงูุฑูุจูุช
    public void introduce() {
        System.out.println("ูุฑุญุจุงู! ุฃูุง " + name);
        System.out.println("ูููู " + color);
    }
}`,
                    visual: `
                        <div class="java-object robot">
                            <div class="object-title">๐ค Robot</div>
                            <div class="object-properties">
                                <div>ุงูุงุณู: ุบูุฑ ูุญุฏุฏ</div>
                                <div>ุงูููู: ุบูุฑ ูุญุฏุฏ</div>
                                <div>ุงูุจุทุงุฑูุฉ: 0%</div>
                            </div>
                        </div>
                    `
                }
            },
            {
                type: 'practice',
                title: 'ุฃูุดุฆ ููุงุณ ุงูุฑูุจูุช ุงูุฎุงุต ุจู',
                description: 'ุฌุฑุจ ุฅูุดุงุก ููุงุณ ูุฅุถุงูุฉ ุฎุตุงุฆุต ูู',
                content: {
                    task: `
                        <h4>๐ฏ ุงููููุฉ:</h4>
                        <p>ุฃุถู ุฎุงุตูุฉ ุฌุฏูุฏุฉ ููุฑูุจูุช ุชุณูู <code>model</code> ูู ููุน String. ุณุชูุงุญุธ ุชุบููุฑ ุงูุฑูุจูุช ูู ุงููุนุงููุฉ ุงููุฑุฆูุฉ!</p>
                    `,
                    starterCode: `public class Robot {
    String name;
    String color;
    int batteryLevel;
    // ุฃุถู ุฎุงุตูุฉ model ููุง
    
    public void introduce() {
        System.out.println("ูุฑุญุจุงู! ุฃูุง " + name);
    }
}`
                }
            },
            {
                type: 'challenge',
                title: 'ุฅูุดุงุก ููุงุณ ูู ุงูุตูุฑ',
                description: 'ุงุฎุชุจุฑ ููุงุฑุงุชู ูู ุฅูุดุงุก ููุงุณ ุฌุฏูุฏ ุจุงููุงูู',
                content: {
                    challenge: 'ุฃูุดุฆ ููุงุณ Car ูุญุชูู ุนูู ุงูุฎุตุงุฆุต ูุงูุทุฑู ุงููุทููุจุฉ',
                    requirements: [
                        'ุฅูุดุงุก ููุงุณ ุจุงุณู Car',
                        'ุฅุถุงูุฉ ุฎุงุตูุฉ brand ูู ููุน String',
                        'ุฅุถุงูุฉ ุฎุงุตูุฉ speed ูู ููุน int',
                        'ุฅุถุงูุฉ ุทุฑููุฉ start() ุชุทุจุน "ุชู ุชุดุบูู ุงูุณูุงุฑุฉ"',
                        'ุฅุถุงูุฉ ุทุฑููุฉ accelerate() ุชุฒูุฏ ุงูุณุฑุนุฉ ุจู 10'
                    ]
                }
            }
        ]
    },
    {
        id: 'maker-002',
        title: 'ุฅูุดุงุก ุงููุงุฆูุงุช',
        description: 'ุชุนูู ููููุฉ ุฅูุดุงุก ูุงุฆูุงุช ูู ุงูููุงุณุงุช',
        stage: 'maker',
        xp: 60,
        prerequisites: ['maker-001'],
        phases: [
            {
                type: 'learn',
                title: 'ูู ุงูููุงุณ ุฅูู ุงููุงุฆู',
                description: 'ุชุนูู ุงููุฑู ุจูู ุงูููุงุณ ูุงููุงุฆู ูููููุฉ ุฅูุดุงุก ูุงุฆูุงุช ุฌุฏูุฏุฉ',
                content: {
                    explanation: `
                        <h4>๐ญ ุงููุงุฆูุงุช: ุชุฌุณูุฏ ุงูููุงุณุงุช</h4>
                        <p>ุฅุฐุง ูุงู ุงูููุงุณ ูู ูุฎุทุท ุงูููุฒูุ ูุงููุงุฆู ูู ุงูููุฒู ุงููุจูู ูุนููุงู. ููููู ุจูุงุก ุนุฏุฉ ููุงุฒู ูู ููุณ ุงููุฎุทุท!</p>
                        
                        <h5>ููููุฉ ุฅูุดุงุก ูุงุฆู:</h5>
                        <ol>
                            <li>ุงุณุชุฎุฏู ุงููููุฉ ุงูููุชุงุญูุฉ <code>new</code></li>
                            <li>ุงุชุจุนูุง ุจุงุณู ุงูููุงุณ</li>
                            <li>ุฃุถู ุงูุฃููุงุณ <code>()</code></li>
                        </ol>
                        
                        <p><strong>ูุซุงู:</strong> <code>Robot myRobot = new Robot();</code></p>
                    `,
                    example: `public class Main {
    public static void main(String[] args) {
        // ุฅูุดุงุก ูุงุฆู ุฑูุจูุช ุฌุฏูุฏ
        Robot myRobot = new Robot();
        
        // ุชุนููู ุฎุตุงุฆุต ุงูุฑูุจูุช
        myRobot.name = "ุจูุจ";
        myRobot.color = "ุฃุฒุฑู";
        myRobot.batteryLevel = 85;
        
        // ุงุณุชุฏุนุงุก ุทุฑููุฉ ุงูุชุนุฑูู
        myRobot.introduce();
    }
}`,
                    visual: `
                        <div class="java-object robot active">
                            <div class="object-title">๐ค ุจูุจ</div>
                            <div class="object-properties">
                                <div>ุงูุงุณู: ุจูุจ</div>
                                <div>ุงูููู: ุฃุฒุฑู</div>
                                <div>ุงูุจุทุงุฑูุฉ: 85%</div>
                            </div>
                        </div>
                    `
                }
            },
            {
                type: 'practice',
                title: 'ุฃูุดุฆ ุฑูุจูุชูู ูุฎุชูููู',
                description: 'ุฌุฑุจ ุฅูุดุงุก ุนุฏุฉ ูุงุฆูุงุช ูู ููุณ ุงูููุงุณ',
                content: {
                    task: `
                        <h4>๐ฏ ุงููููุฉ:</h4>
                        <p>ุฃูุดุฆ ุฑูุจูุช ุซุงูู ูุฃุนุทู ุงุณูุงู ููููุงู ูุฎุชูููู. ุณุชุดุงูุฏ ููุง ุงูุฑูุจูุชูู ูู ุงููุนุงููุฉ!</p>
                    `,
                    starterCode: `public class Main {
    public static void main(String[] args) {
        Robot robot1 = new Robot();
        robot1.name = "ุจูุจ";
        robot1.color = "ุฃุฒุฑู";
        
        // ุฃูุดุฆ robot2 ููุง
        
        robot1.introduce();
        // ุงุณุชุฏุนู introduce() ููุฑูุจูุช ุงูุซุงูู
    }
}`
                }
            },
            {
                type: 'challenge',
                title: 'ุญุฏููุฉ ุงููุงุฆูุงุช',
                description: 'ุฃูุดุฆ ุนุฏุฉ ูุงุฆูุงุช ูุชูุงุนู ูุนูุง',
                content: {
                    challenge: 'ุฃูุดุฆ 3 ุณูุงุฑุงุช ูุฎุชููุฉ ูุดุบููุง ุฌููุนุงู',
                    requirements: [
                        'ุฅูุดุงุก ุซูุงุซ ูุงุฆูุงุช Car ูุฎุชููุฉ',
                        'ุฅุนุทุงุก ูู ุณูุงุฑุฉ ุงุณู ูุงุฑูุฉ ูุฎุชูู',
                        'ุชุดุบูู ุฌููุน ุงูุณูุงุฑุงุช ุจุงุณุชุฎุฏุงู start()',
                        'ุฒูุงุฏุฉ ุณุฑุนุฉ ุฅุญุฏู ุงูุณูุงุฑุงุช ุจุงุณุชุฎุฏุงู accelerate()',
                        'ุทุจุงุนุฉ ูุนูููุงุช ูู ุณูุงุฑุฉ'
                    ]
                }
            }
        ]
    },
    {
        id: 'maker-003',
        title: 'ุงููููุณุชุฑูุชูุฑ',
        description: 'ุชุนูู ููููุฉ ุฅูุดุงุก ูููุณุชุฑูุชูุฑ ูุชููุฆุฉ ุงููุงุฆูุงุช',
        stage: 'maker',
        xp: 70,
        prerequisites: ['maker-002'],
        phases: [
            {
                type: 'learn',
                title: 'ุงููููุณุชุฑูุชูุฑ: ุงูููููุฆ ุงูุฐูู',
                description: 'ุงููููุณุชุฑูุชูุฑ ูุณูุญ ูู ุจุฅุนุทุงุก ููู ุฃูููุฉ ูููุงุฆู ุนูุฏ ุฅูุดุงุฆู',
                content: {
                    explanation: `
                        <h4>๐ง ูุง ูู ุงููููุณุชุฑูุชูุฑุ</h4>
                        <p>ุงููููุณุชุฑูุชูุฑ ูู ุทุฑููุฉ ุฎุงุตุฉ ุชูุณุชุฏุนู ุชููุงุฆูุงู ุนูุฏ ุฅูุดุงุก ูุงุฆู ุฌุฏูุฏ. ูุณุงุนุฏู ูู ุฅุนุทุงุก ููู ุฃูููุฉ ูููุงุฆู ุจุฏูุงู ูู ุชุนููููุง ูุงุญุฏุฉ ุชูู ุงูุฃุฎุฑู.</p>
                        
                        <h5>ููุงุนุฏ ุงููููุณุชุฑูุชูุฑ:</h5>
                        <ul>
                            <li>ูู ููุณ ุงุณู ุงูููุงุณ ุชูุงูุงู</li>
                            <li>ูุง ูุญุชูู ุนูู ููุน ุฅุฑุฌุงุน (ุญุชู void)</li>
                            <li>ููุณุชุฏุนู ุชููุงุฆูุงู ูุน <code>new</code></li>
                        </ul>
                        
                        <p><strong>ุงููุงุฆุฏุฉ:</strong> ุจุฏูุงู ูู 3 ุฃุณุทุฑ ูุชุนููู ุงููููุ ุณุทุฑ ูุงุญุฏ ููุท!</p>
                    `,
                    example: `public class Robot {
    String name;
    String color;
    int batteryLevel;
    
    // ุงููููุณุชุฑูุชูุฑ
    public Robot(String robotName, String robotColor, int battery) {
        name = robotName;
        color = robotColor;
        batteryLevel = battery;
        System.out.println("ุชู ุฅูุดุงุก ุฑูุจูุช ุฌุฏูุฏ: " + name);
    }
    
    public void introduce() {
        System.out.println("ูุฑุญุจุงู! ุฃูุง " + name + " ูุฃูุง " + color);
    }
}`,
                    visual: `
                        <div class="construction-animation">
                            <div class="java-object robot building">
                                <div class="object-title">๐ค ุฌุงุฑู ุงูุฅูุดุงุก...</div>
                                <div class="object-properties">
                                    <div>โก ุชุฌููุน ุงูููููุงุช...</div>
                                    <div>๐จ ุชุทุจูู ุงูููู...</div>
                                    <div>๐ ุดุญู ุงูุจุทุงุฑูุฉ...</div>
                                </div>
                            </div>
                        </div>
                    `
                }
            },
            {
                type: 'practice',
                title: 'ุฃุถู ูููุณุชุฑูุชูุฑ ููุณูุงุฑุฉ',
                description: 'ุฌุฑุจ ุฅุถุงูุฉ ูููุณุชุฑูุชูุฑ ูููุงุณ Car',
                content: {
                    task: `
                        <h4>๐ฏ ุงููููุฉ:</h4>
                        <p>ุฃุถู ูููุณุชุฑูุชูุฑ ูููุงุณ Car ูุฃุฎุฐ ุงุณู ุงููุงุฑูุฉ ูุงูุณุฑุนุฉ ุงูุฃูููุฉ. ุซู ุฃูุดุฆ ุณูุงุฑุฉ ุจุงุณุชุฎุฏุงู ุงููููุณุชุฑูุชูุฑ ุงูุฌุฏูุฏ!</p>
                    `,
                    starterCode: `public class Car {
    String brand;
    int speed;
    
    // ุฃุถู ุงููููุณุชุฑูุชูุฑ ููุง
    
    public void start() {
        System.out.println(brand + " ุชู ุชุดุบูููุง!");
    }
    
    public void showInfo() {
        System.out.println("ุงูุณูุงุฑุฉ: " + brand + ", ุงูุณุฑุนุฉ: " + speed);
    }
}

public class Main {
    public static void main(String[] args) {
        // ุฃูุดุฆ ุณูุงุฑุฉ ุจุงุณุชุฎุฏุงู ุงููููุณุชุฑูุชูุฑ
    }
}`
                }
            },
            {
                type: 'challenge',
                title: 'ูุตูุน ุงููุงุฆูุงุช',
                description: 'ุฃูุดุฆ ูุธุงู ูููุณุชุฑูุชูุฑ ูุชูุงูู',
                content: {
                    challenge: 'ุฃูุดุฆ ููุงุณ Student ูุน ูููุณุชุฑูุชูุฑ ูุฃูุดุฆ ุนุฏุฉ ุทูุงุจ',
                    requirements: [
                        'ุฅูุดุงุก ููุงุณ Student',
                        'ุฎุตุงุฆุต: name (String), age (int), grade (String)',
                        'ูููุณุชุฑูุชูุฑ ูุฃุฎุฐ ุฌููุน ุงูุฎุตุงุฆุต ููุนุงููุงุช',
                        'ุทุฑููุฉ displayInfo() ุชุนุฑุถ ูุนูููุงุช ุงูุทุงูุจ',
                        'ุฅูุดุงุก 3 ุทูุงุจ ูุฎุชูููู ุจุงุณุชุฎุฏุงู ุงููููุณุชุฑูุชูุฑ',
                        'ุนุฑุถ ูุนูููุงุช ุฌููุน ุงูุทูุงุจ'
                    ]
                }
            }
        ]
    },

    // THE BUILDER STAGE - OOP Pillars
    {
        id: 'builder-001',
        title: 'ุงูุชุบููู (Encapsulation)',
        description: 'ุชุนูู ููููุฉ ุญูุงูุฉ ุงูุจูุงูุงุช ุจุงุณุชุฎุฏุงู Private ู Getters/Setters',
        stage: 'builder',
        xp: 80,
        prerequisites: ['maker-003'],
        phases: [
            {
                type: 'learn',
                title: 'ุญูุงูุฉ ุงูุจูุงูุงุช: Private ู Public',
                description: 'ุชุนูู ููููุฉ ุงูุชุญูู ูู ุงููุตูู ููุฎุตุงุฆุต ูุงูุทุฑู',
                content: {
                    explanation: `
                        <h4>๐ ุงูุชุบููู: ุญูุงูุฉ ุงูุจูุงูุงุช</h4>
                        <p>ุงูุชุบููู ูุนูู ุฅุฎูุงุก ุงูุชูุงุตูู ุงูุฏุงุฎููุฉ ูููุงุฆู ูุฅุธูุงุฑ ูุง ูู ุถุฑูุฑู ููุท. ูุซู ุฌูุงุฒ ุงูุชููุฒููู - ุชุณุชุฎุฏู ุงูุฑูููุช ููุง ุชุญุชุงุฌ ููุนุฑูุฉ ุงูุฏูุงุฆุฑ ุงูุฏุงุฎููุฉ.</p>
                        
                        <h5>ูุณุชููุงุช ุงููุตูู:</h5>
                        <ul>
                            <li><strong>private:</strong> ูููู ุงููุตูู ุฅูููุง ูู ุฏุงุฎู ุงูููุงุณ ููุท</li>
                            <li><strong>public:</strong> ูููู ุงููุตูู ุฅูููุง ูู ุฃู ููุงู</li>
                        </ul>
                        
                        <h5>Getters ู Setters:</h5>
                        <p>ุทุฑู ุฎุงุตุฉ ูููุตูู ูุชุนุฏูู ุงูุจูุงูุงุช ุงูุฎุงุตุฉ ุจุทุฑููุฉ ูุญูููุฉ.</p>
                    `,
                    example: `public class BankAccount {
    private String accountNumber;
    private double balance;  // ูุญููุฉ ูู ุงูุชุนุฏูู ุงููุจุงุดุฑ
    
    public BankAccount(String accNum, double initialBalance) {
        accountNumber = accNum;
        if (initialBalance >= 0) {
            balance = initialBalance;
        }
    }
    
    // Getter - ููุญุตูู ุนูู ุงูุฑุตูุฏ
    public double getBalance() {
        return balance;
    }
    
    // Setter ูุญููู - ูุฅูุฏุงุน ูุจูุบ
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("ุชู ุฅูุฏุงุน " + amount);
        }
    }
    
    // ุทุฑููุฉ ูุญูููุฉ ููุณุญุจ
    public boolean withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("ุชู ุณุญุจ " + amount);
            return true;
        }
        System.out.println("ุนูููุฉ ุณุญุจ ุบูุฑ ุตุงูุญุฉ");
        return false;
    }
}`,
                    visual: `
                        <div class="encapsulation-demo">
                            <div class="java-object bank-account">
                                <div class="object-title">๐ฆ ุญุณุงุจ ุจููู</div>
                                <div class="private-section">
                                    <div class="section-title">๐ ุจูุงูุงุช ุฎุงุตุฉ</div>
                                    <div>ุฑูู ุงูุญุณุงุจ: ****1234</div>
                                    <div>ุงูุฑุตูุฏ: 1000$</div>
                                </div>
                                <div class="public-section">
                                    <div class="section-title">๐ ุนูููุงุช ูุชุงุญุฉ</div>
                                    <div>- ุนุฑุถ ุงูุฑุตูุฏ</div>
                                    <div>- ุฅูุฏุงุน ูุจูุบ</div>
                                    <div>- ุณุญุจ ูุจูุบ</div>
                                </div>
                            </div>
                        </div>
                    `
                }
            },
            {
                type: 'practice',
                title: 'ุงุญูู ุจูุงูุงุช ุงูุทุงูุจ',
                description: 'ุญูู ููุงุณ Student ููุณุชุฎุฏู ุงูุชุบููู',
                content: {
                    task: `
                        <h4>๐ฏ ุงููููุฉ:</h4>
                        <p>ุงุฌุนู ุฎุตุงุฆุต ุงูุทุงูุจ private ูุฃุถู getters ู setters ููุงุณุจุฉ. ุชุฃูุฏ ูู ุฃู ุงูุนูุฑ ูุง ููู ุนู 0!</p>
                    `,
                    starterCode: `public class Student {
    // ุงุฌุนู ูุฐู ุงูุฎุตุงุฆุต private
    String name;
    int age;
    double gpa;
    
    public Student(String name, int age, double gpa) {
        this.name = name;
        this.age = age;
        this.gpa = gpa;
    }
    
    // ุฃุถู getters ู setters ููุง
    
}

public class Main {
    public static void main(String[] args) {
        Student student = new Student("ุฃุญูุฏ", 20, 3.5);
        // ุงุฎุชุจุฑ ุงูู getters ู setters
    }
}`
                }
            },
            {
                type: 'challenge',
                title: 'ูุธุงู ุฅุฏุงุฑุฉ ุงูููุชุจุฉ',
                description: 'ุทุจู ุงูุชุบููู ูู ูุธุงู ุฃูุซุฑ ุชุนููุฏุงู',
                content: {
                    challenge: 'ุฃูุดุฆ ููุงุณ Book ูุน ุชุบููู ูุงูู ููุธุงู ุฅุนุงุฑุฉ',
                    requirements: [
                        'ููุงุณ Book ูุน ุฎุตุงุฆุต private: title, author, isbn, isAvailable',
                        'ูููุณุชุฑูุชูุฑ ููุงุณุจ',
                        'getters ูุฌููุน ุงูุฎุตุงุฆุต',
                        'ุทุฑููุฉ borrowBook() ุชุบูุฑ ุญุงูุฉ ุงูุชููุฑ ุฅูู false',
                        'ุทุฑููุฉ returnBook() ุชุนูุฏ ุงููุชุงุจ (true)',
                        'ุทุฑููุฉ isAvailable() ููุชุญูู ูู ุงูุชููุฑ',
                        'ุฅูุดุงุก ููุชุจุฉ ุตุบูุฑุฉ ูุน 3 ูุชุจ ูุงุฎุชุจุงุฑ ุงููุธุงู'
                    ]
                }
            }
        ]
    },
    {
        id: 'builder-002',
        title: 'ุงููุฑุงุซุฉ (Inheritance)',
        description: 'ุชุนูู ููููุฉ ุฅูุดุงุก ููุงุณุงุช ุชุฑุซ ูู ููุงุณุงุช ุฃุฎุฑู',
        stage: 'builder',
        xp: 90,
        prerequisites: ['builder-001'],
        phases: [
            {
                type: 'learn',
                title: 'ุดุฌุฑุฉ ุงูุนุงุฆูุฉ: Parent ู Child',
                description: 'ููู ููููู ุงููุฑุงุซุฉ ูููููุฉ ุงุณุชุฎุฏุงู extends',
                content: {
                    explanation: `
                        <h4>๐ณ ุงููุฑุงุซุฉ: ุดุฌุฑุฉ ุงูููุงุณุงุช</h4>
                        <p>ุงููุฑุงุซุฉ ุชุณูุญ ูููุงุณ (Child) ุจุฃู ูุฑุซ ุฎุตุงุฆุต ูุทุฑู ููุงุณ ุขุฎุฑ (Parent). ูุซู ุงูุทูู ุงูุฐู ูุฑุซ ุตูุงุช ูู ูุงูุฏูู!</p>
                        
                        <h5>ููุงุฆุฏ ุงููุฑุงุซุฉ:</h5>
                        <ul>
                            <li><strong>ุฅุนุงุฏุฉ ุงูุงุณุชุฎุฏุงู:</strong> ูุง ููุฑุฑ ุงูููุฏ</li>
                            <li><strong>ุงูุชูุธูู:</strong> ูููู ูุงุถุญ ูููุทูู</li>
                            <li><strong>ุงูุชูุณูุน:</strong> ุฅุถุงูุฉ ููุฒุงุช ุฌุฏูุฏุฉ ุจุณูููุฉ</li>
                        </ul>
                        
                        <p><strong>ุงููููุฉ ุงูููุชุงุญูุฉ:</strong> <code>extends</code></p>
                    `,
                    example: `// ุงูููุงุณ ุงูุฃุจ (Parent)
public class Vehicle {
    protected String brand;
    protected int speed;
    
    public Vehicle(String brand) {
        this.brand = brand;
        this.speed = 0;
    }
    
    public void start() {
        System.out.println(brand + " ุชู ุชุดุบูููุง");
    }
    
    public void accelerate() {
        speed += 10;
        System.out.println("ุงูุณุฑุนุฉ ุงูุขู: " + speed);
    }
}

// ุงูููุงุณ ุงูุงุจู (Child)
public class Car extends Vehicle {
    private int numberOfDoors;
    
    public Car(String brand, int doors) {
        super(brand);  // ุงุณุชุฏุนุงุก ูููุณุชุฑูุชูุฑ ุงูุฃุจ
        this.numberOfDoors = doors;
    }
    
    // ุทุฑููุฉ ุฌุฏูุฏุฉ ุฎุงุตุฉ ุจุงูุณูุงุฑุฉ
    public void openDoors() {
        System.out.println("ูุชุญ " + numberOfDoors + " ุฃุจูุงุจ");
    }
    
    // ุชุฎุตูุต ุทุฑููุฉ ูู ุงูุฃุจ
    @Override
    public void start() {
        System.out.println("ุชุดุบูู ูุญุฑู ุงูุณูุงุฑุฉ " + brand);
        super.start();  // ุงุณุชุฏุนุงุก ุทุฑููุฉ ุงูุฃุจ
    }
}`,
                    visual: `
                        <div class="inheritance-tree">
                            <div class="parent-class">
                                <div class="class-title">๐ Vehicle (ุงูุฃุจ)</div>
                                <div class="class-features">
                                    <div>+ brand: String</div>
                                    <div>+ speed: int</div>
                                    <div>+ start()</div>
                                    <div>+ accelerate()</div>
                                </div>
                            </div>
                            <div class="inheritance-arrow">โฌ๏ธ extends</div>
                            <div class="child-class">
                                <div class="class-title">๐ Car (ุงูุงุจู)</div>
                                <div class="inherited-features">
                                    <div>ูุฑุงุซุฉ: brand, speed, start(), accelerate()</div>
                                </div>
                                <div class="new-features">
                                    <div>+ numberOfDoors: int</div>
                                    <div>+ openDoors()</div>
                                </div>
                            </div>
                        </div>
                    `
                }
            },
            {
                type: 'practice',
                title: 'ุฃูุดุฆ ุนุงุฆูุฉ ุงูุญููุงูุงุช',
                description: 'ุทุจู ุงููุฑุงุซุฉ ูุน ููุงุณ Animal',
                content: {
                    task: `
                        <h4>๐ฏ ุงููููุฉ:</h4>
                        <p>ุฃูุดุฆ ููุงุณ Dog ูุฑุซ ูู Animal. ุฃุถู ุฎุงุตูุฉ breed ูุงุฌุนูู ููุจุญ ุจุฏูุงู ูู ุงูุตูุช ุงูุนุงู!</p>
                    `,
                    starterCode: `public class Animal {
    protected String name;
    protected int age;
    
    public Animal(String name, int age) {
        this.name = name;
        this.age = age;
    }
    
    public void makeSound() {
        System.out.println(name + " ูุตุฏุฑ ุตูุชุงู");
    }
    
    public void eat() {
        System.out.println(name + " ูุฃูู");
    }
}

// ุฃูุดุฆ ููุงุณ Dog ููุง ูุฑุซ ูู Animal

public class Main {
    public static void main(String[] args) {
        // ุงุฎุชุจุฑ ุงูููุงุณ ุงูุฌุฏูุฏ
    }
}`
                }
            },
            {
                type: 'challenge',
                title: 'ูุธุงู ุงูููุธููู',
                description: 'ุฃูุดุฆ ูููู ูุฑุงุซุฉ ูุชูุงูู ููููุธููู',
                content: {
                    challenge: 'ุฃูุดุฆ ูุธุงู ููุธููู ูุน ุฃููุงุน ูุฎุชููุฉ ูู ุงููุธุงุฆู',
                    requirements: [
                        'ููุงุณ Employee ุฃุณุงุณู ูุน: name, id, salary',
                        'ุทุฑููุฉ work() ูู Employee',
                        'ููุงุณ Manager ูุฑุซ ูู Employee ูุน: numberOfTeams',
                        'ููุงุณ Developer ูุฑุซ ูู Employee ูุน: programmingLanguage',
                        'ุชุฎุตูุต ุทุฑููุฉ work() ูู ููุง ุงูููุงุณูู ุงููุฑุนููู',
                        'ุฅูุดุงุก ูุฏูุฑ ููุทูุฑ ูุงุฎุชุจุงุฑ ุฌููุน ุงูุทุฑู',
                        'ุทุฑููุฉ displayInfo() ูู ุงูููุงุณ ุงูุฃุณุงุณู'
                    ]
                }
            }
        ]
    },

    // THE ARCHITECT STAGE - Integrated Systems
    {
        id: 'architect-001',
        title: 'ูุธุงู ุฅุฏุงุฑุฉ ุญุฏููุฉ ุงูุญููุงู',
        description: 'ุงุทุจู ุฌููุน ููุงููู OOP ูู ูุดุฑูุน ูุชูุงูู',
        stage: 'architect',
        xp: 150,
        prerequisites: ['builder-002'],
        phases: [
            {
                type: 'learn',
                title: 'ุชุตููู ุงููุธุงู',
                description: 'ุชุนูู ููููุฉ ุชุญููู ุงููุชุทูุจุงุช ูุชุตููู ุงููุธุงู',
                content: {
                    explanation: `
                        <h4>๐๏ธ ูุฑุญูุฉ ุงููุนูุงุฑู: ุงููุธู ุงููุชูุงููุฉ</h4>
                        <p>ุงูุขู ุณุชุฌูุน ูู ูุง ุชุนููุชู ูุจูุงุก ูุธุงู ูุชูุงูู. ุณูุจูู ูุธุงู ุฅุฏุงุฑุฉ ุญุฏููุฉ ุงูุญููุงู ุจุงุณุชุฎุฏุงู:</p>
                        
                        <h5>ุงูููููุงุช ุงูุฃุณุงุณูุฉ:</h5>
                        <ul>
                            <li><strong>ุงูููุงุณุงุช:</strong> Animal, Lion, Elephant, Zoo</li>
                            <li><strong>ุงูุชุบููู:</strong> ุจูุงูุงุช ูุญููุฉ ููุตูู ูุญููู</li>
                            <li><strong>ุงููุฑุงุซุฉ:</strong> ูููู ุญููุงูุงุช ูุชููุน</li>
                            <li><strong>ุชุนุฏุฏ ุงูุฃุดูุงู:</strong> ุณููููุงุช ูุฎุชููุฉ ููู ุญููุงู</li>
                        </ul>
                        
                        <h5>ุงููุธุงุฆู ุงููุทููุจุฉ:</h5>
                        <ul>
                            <li>ุฅุถุงูุฉ ุญููุงูุงุช ููุญุฏููุฉ</li>
                            <li>ุฅุทุนุงู ุฌููุน ุงูุญููุงูุงุช</li>
                            <li>ุนุฑุถ ูุนูููุงุช ุงูุญุฏููุฉ</li>
                            <li>ูุญุงูุงุฉ ุฃุตูุงุช ุงูุญููุงูุงุช</li>
                        </ul>
                    `,
                    example: `// ูุฐุง ูุซุงู ุนูู ุงูุชุตููู ุงููุทููุจ
public abstract class Animal {
    protected String name;
    protected int age;
    protected boolean isHungry;
    
    public Animal(String name, int age) {
        this.name = name;
        this.age = age;
        this.isHungry = true;
    }
    
    // ุทุฑููุฉ ูุฌุฑุฏุฉ - ูู ุญููุงู ูู ุตูุช ูุฎุชูู
    public abstract void makeSound();
    
    public void feed() {
        if (isHungry) {
            System.out.println(name + " ูุชูุงูู ุงูุทุนุงู");
            isHungry = false;
        } else {
            System.out.println(name + " ููุณ ุฌุงุฆุนุงู");
        }
    }
    
    // getters
    public String getName() { return name; }
    public boolean isHungry() { return isHungry; }
}`,
                    visual: `
                        <div class="zoo-system">
                            <div class="zoo-container">
                                <h4>๐ฆ ุญุฏููุฉ ุงูุญููุงู</h4>
                                <div class="animal-grid">
                                    <div class="animal-card lion">๐ฆ ุฃุณุฏ</div>
                                    <div class="animal-card elephant">๐ ููู</div>
                                    <div class="animal-card monkey">๐ต ูุฑุฏ</div>
                                </div>
                                <div class="zoo-stats">
                                    <div>ุฅุฌูุงูู ุงูุญููุงูุงุช: 3</div>
                                    <div>ุงูุญููุงูุงุช ุงูุฌุงุฆุนุฉ: 2</div>
                                </div>
                            </div>
                        </div>
                    `
                }
            },
            {
                type: 'practice',
                title: 'ุจูุงุก ุงูุญููุงูุงุช',
                description: 'ุฃูุดุฆ ููุงุณุงุช ุงูุญููุงูุงุช ุงููุฎุชููุฉ',
                content: {
                    task: `
                        <h4>๐ฏ ุงููููุฉ:</h4>
                        <p>ุฃููู ููุงุณุงุช Lion ู Elephant. ูู ุญููุงู ูู ุตูุช ูุฎุชูู ูุณููู ุฎุงุต!</p>
                    `,
                    starterCode: `public abstract class Animal {
    protected String name;
    protected int age;
    protected boolean isHungry;
    
    public Animal(String name, int age) {
        this.name = name;
        this.age = age;
        this.isHungry = true;
    }
    
    public abstract void makeSound();
    
    public void feed() {
        if (isHungry) {
            System.out.println(name + " ูุชูุงูู ุงูุทุนุงู");
            isHungry = false;
        }
    }
    
    public String getName() { return name; }
    public boolean isHungry() { return isHungry; }
}

// ุฃููู ููุงุณ Lion
public class Lion extends Animal {
    // ุฃุถู ุงููููุณุชุฑูุชูุฑ ูุงูุทุฑู
}

// ุฃููู ููุงุณ Elephant  
public class Elephant extends Animal {
    // ุฃุถู ุงููููุณุชุฑูุชูุฑ ูุงูุทุฑู
}`
                }
            },
            {
                type: 'challenge',
                title: 'ูุธุงู ุงูุญุฏููุฉ ุงููุงูู',
                description: 'ุงุทุจู ุฌููุน ุงูููุงููู ูู ูุธุงู ูุชูุงูู',
                content: {
                    challenge: 'ุฃูุดุฆ ูุธุงู ุฅุฏุงุฑุฉ ุญุฏููุฉ ุญููุงู ูุงูู ูุน ุฌููุน ุงููุธุงุฆู',
                    requirements: [
                        'ููุงุณ Animal ูุฌุฑุฏ ูุน ุงูุฎุตุงุฆุต ูุงูุทุฑู ุงูุฃุณุงุณูุฉ',
                        'ููุงุณุงุช Lion, Elephant, Monkey ุชุฑุซ ูู Animal',
                        'ูู ุญููุงู ูู ุตูุช ูุฎุชูู (makeSound)',
                        'ููุงุณ Zoo ูุญุชูู ุนูู ูุงุฆูุฉ ุญููุงูุงุช',
                        'ุทุฑููุฉ addAnimal() ูู Zoo',
                        'ุทุฑููุฉ feedAllAnimals() ุชุทุนู ุฌููุน ุงูุญููุงูุงุช',
                        'ุทุฑููุฉ makeAllSounds() ุชุฌุนู ูู ุงูุญููุงูุงุช ุชุตุฏุฑ ุฃุตูุงุชูุง',
                        'ุทุฑููุฉ displayZooInfo() ุชุนุฑุถ ูุนูููุงุช ุงูุญุฏููุฉ',
                        'ุฅูุดุงุก ุญุฏููุฉ ูุน 5 ุญููุงูุงุช ูุฎุชููุฉ ูุงุฎุชุจุงุฑ ุฌููุน ุงููุธุงุฆู'
                    ]
                }
            }
        ]
    }
];

// Initialize lessons when the data is loaded
document.addEventListener('DOMContentLoaded', () => {
    console.log('ุชู ุชุญููู', window.lessonData.length, 'ุฏุฑุณ');
});